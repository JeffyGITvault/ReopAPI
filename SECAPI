from fastapi import FastAPI
import requests

app = FastAPI()

HEADERS = {"User-Agent": "YourName (your@email.com)"}

COMPANIES = {
    "Central Garden & Pet": "0000887733",
    "Restoration Hardware (RH)": "0001528849",
    "Ball Corporation": "0000009389",
    "DISH Network Corporation": "0001001082",
    "Frontier Airlines": "0001034645",
    "Community Health Systems": "0001108109",
    "Expeditors International": "0000746515",
    "iHeartMedia, Inc.": "0001400891",
    "Caesars Entertainment": "0000858339",
    "Boyd Gaming Corporation": "0000003545",
    "Penn Entertainment, Inc.": "0000921738",
    "Bally's Corporation": "0001747079",
    "Harrah's Entertainment": "0000049939",
    "Tri-State Energy": "0001637880",
}

def get_filings(cik):
    """Fetch the latest 10-K and 10-Q filings for a given CIK"""
    url = f"https://data.sec.gov/submissions/CIK{cik}.json"
    response = requests.get(url, headers=HEADERS)

    if response.status_code != 200:
        return {"error": f"Failed to retrieve filings for CIK {cik}"}

    data = response.json()
    filings = data["filings"]["recent"]

    ten_k_url = None
    ten_q_url = None

    for i, form in enumerate(filings["form"]):
        if form == "10-K" and not ten_k_url:
            ten_k_url = f"https://www.sec.gov/Archives/{filings['fileNumber'][i]}/{filings['accessionNumber'][i].replace('-', '')}/index.html"
        elif form == "10-Q" and not ten_q_url:
            ten_q_url = f"https://www.sec.gov/Archives/{filings['fileNumber'][i]}/{filings['accessionNumber'][i].replace('-', '')}/index.html"

        if ten_k_url and ten_q_url:
            break

    return {
        "10-K": ten_k_url if ten_k_url else "Not Found",
        "10-Q": ten_q_url if ten_q_url else "Not Found",
    }

@app.get("/get_filings/{company_name}")
def get_company_filings(company_name: str):
    """API endpoint to fetch 10-K and 10-Q filings for a company"""
    company_name = company_name.lower().strip()
    cik = None

    for name, cik_value in COMPANIES.items():
        if company_name in name.lower():
            cik = cik_value
            break

    if not cik:
        return {"error": "Company not found in our database"}

    return get_filings(cik)

